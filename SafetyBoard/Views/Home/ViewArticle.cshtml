@model SafetyBoard.Models.ViewModel.ArticleViewModel
@using Microsoft.AspNet.Identity;
@{
    ViewBag.Title = "ViewArticle";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="article-container">
    <div class="poster-info-container">
        <div class="poster-information">
            <h3>Poster Information</h3>
            <img src="@Url.Content(Model.ProfileImage.Path)" class="profImage" />
            @if (Model.User.IsQA)
            {
                <label class="label label-success">Inspector</label>
            }
            else
            {
                <label class="label label-primary">Normal User</label>
            }
            <p class="poster-info">Name : <a href=@Url.Action("ViewUserProfile","User",new { id=Model.Article.UserId})>@Model.Article.User.FirstName @Model.Article.User.LastName</a></p>
            <p class="poster-info">Organization : @Model.User.Organization.Name</p>
            <p class="poster-info">Email : @Model.User.Email</p>
            <p class="poster-info">Contact No. : @Model.User.PhoneNumber</p>
        </div>
        <div class="post-likers">
            <h3 >Users who likes this post</h3>
            @if(Model.IsLikeEmpty)
            {
               <h4 class="post-likers-header">There are no Likes at this time</h4>
            }
            @foreach (var user in Model.Likers)
            {
               <div class="user-view-article-box">
                   <p><strong>Name :<a href=@Url.Action("ViewUserProfile","User",new { id=user.Id})> @user.FirstName @user.LastName</a></strong></p>
                   <p><strong>Org : @user.Organization.Name</strong></p>
               </div>
            }

        </div>
    </div>
    <div class="article">
        @if (User.Identity.GetUserId() == Model.User.Id)
        {
            if (User.Identity.GetUserId() != Model.Article.UserId)
            {
                throw new InvalidOperationException();
            }
            <button class="btn btn-danger btn-delete" data-toggle="modal" data-target="#exampleModal">Delete</button>
            <button class="btn btn-success btn-edit" data-toggle="modal" data-target="#editModal">Edit</button>

            <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="exampleModalLabel">Confirmation</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <h3>Are you sure you want to delete this post?</h3>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-danger" onclick="location.href='@Url.Action("DeleteArticle", "Home", new { id = Model.Article.Id})'">Delete Post</button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="editModalLabel">Edit</h5>
                            <button type="button" class="modal-close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            @using (Html.BeginForm("UpdateArticle", "Home"))
                            {
                                @Html.HiddenFor(m => Model.Article.Id)
                                @Html.AntiForgeryToken()
                                <div class="form-group">
                                    @Html.LabelFor(m => Model.Article.Title, new { @class = "col-form-label" }):
                                    @Html.TextBoxFor(m => Model.Article.Title, new { @class = "form-control" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => Model.Article.Article, new { @class = "col-form-label" }):
                                    @Html.TextAreaFor(m => Model.Article.Article, new { @class = "form-control form-textarea" })
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                    <button type="submit" value="Save" class="btn btn-primary">Post</button>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
        <h2 class="poster-info">Article Title : @Model.Article.Title</h2>
        <h4 class="poster-info">Date and Time Posted : @Model.Article.DatePosted</h4>
        <p class="poster-info">@Model.Article.Article</p>
        <button class="btn btn-primary btn-post-xl-comment" data-toggle="modal" data-target="#addCommentModal">Post a Comment</button>
    </div>
</div>
@foreach (var comment in Model.Comments)
{

    <div class="comment-box">
        @if (comment.UserId == User.Identity.GetUserId())
        {
            <a href="@Url.Action("EditComment","Home",new { id = comment.Id})" class="btn btn-success btn-edit-comment js-edit">Edit</a>
            <a href="#" class="btn btn-danger btn-delete-comment js-delete" data-comment-id="@comment.Id">Delete</a>
        }

        <div class="commentor-information">
            <div class="commentor-name">
                <p><strong><a href=@Url.Action("ViewUserProfile","User",new { id=comment.UserId})>@comment.User.FirstName @comment.User.LastName</a></strong></p>
            </div>
            <div class="commentor-Org">
                <p>@comment.User.Organization.Name</p>
            </div>
            <div class="commentor-date-posted">
                <p>Posted On: @comment.DatePosted</p>
            </div>
            <hr />
            <div class="commentor-Org">
                <p>Comment: @comment.postComment</p>
            </div>
        </div>
    </div>

}

<div class="modal fade" id="addCommentModal" tabindex="-1" role="dialog" aria-labelledby="addCommentModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addCommentModalLabel">Post a Comment</h5>
                <button type="button" class="modal-close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("AddComment", "Home"))
                {
                <div class="form-group">
                    @Html.HiddenFor(m => m.Comment.UserId, new { @Value = User.Identity.GetUserId() })
                    @Html.HiddenFor(m => m.Comment.SafetyNewsId, new { @Value = Model.Article.Id })
                    @Html.TextAreaFor(m => m.Comment.postComment, new { @class = "form-control form-textarea" })
                </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="submit" value="Save" class="btn btn-primary">Post Comment</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
@section scripts
    {
    <script>
        $(document).ready(function () {

            $(".js-delete").click(function (e) {
                var link = $(e.target);
                bootbox.dialog({
                    message: "Are you sure you want to delete this comment?",
                    title: "Confirm",
                    buttons: {
                        no: {
                            label: "No",
                            className: "btn-default",
                            callback: function () {
                                bootbox.hideAll();
                            }
                        },
                        yes: {
                            label: "Yes",
                            className: "btn-danger",
                            callback: function () {
                                $.ajax({
                                    url: "/api/comment/" + link.attr("data-comment-id"),
                                    method: "DELETE"
                                })
                                    .done(function () {
                                        link.parent("div").fadeOut(function () {
                                            $(this).remove();
                                        });
                                    })
                                    .fail(function () {
                                        toastr.fail("Delete Failed!")
                                    });
                            }
                        }
                    }
                });

            });
        });
    </script>
}

