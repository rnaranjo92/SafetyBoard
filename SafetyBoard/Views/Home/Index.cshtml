@model SafetyBoard.Models.ViewModel.HomeViewModel
@using Microsoft.AspNet.Identity;
@{
    ViewBag.Title = "Home Page";
}
<div class="container2">
    <div class="container-newsfeed">
        <h2 class="inspection-newsfeed">Inspections Newsfeed</h2>
        <ul class="inspections">

            @foreach (var inspection in Model.Inspection)
            {
                <li>
                    <div class="date">
                        <div class="month">
                            @inspection.DateTime.ToString("MMM")
                        </div>
                        <div class="day">
                            @inspection.DateTime.ToString("d ")
                        </div>
                    </div>
                    <div class="details">
                        <span class="inspector">
                            <strong> @inspection.User.FirstName @inspection.User.LastName</strong>
                        </span>
                        <span class="inspectionType">
                            @inspection.InspectionType.SafetyCategory Inspection
                        </span>
                        <br />

                        @if (inspection.User.Email == User.Identity.Name || User.Identity.Name.Contains("qa"))
                        {
                            <span class="view">
                                <a href="@Url.Action("Edit", "Inspections", new { id = inspection.Id })">Edit</a> |
                            </span>
                            <span class="delete">
                                <a href="#" class="js-cancel-inspection" data-inspection-id="@inspection.Id">Cancel</a> |
                            </span>
                        }

                        <span class="edit">
                            <a href="@Url.Action("View", "Inspections", new { id = inspection.Id })">View</a>
                        </span>

                    </div>
                </li>

            }

        </ul>
    </div>
    <div class="container-newsfeed2">
        <div class="postArticle">

            @{
                String[] gifPath = {
                    "/Image/safetygif1.gif",
                    "/Image/safetygif2.gif",
                    "/Image/safetygif3.gif"
                };
                Random r = new Random();
                int gifSelect = r.Next(0, 3);
                <img src=@(gifPath[gifSelect]) alt="This is my animated image" height="340" width="400" class="front-page-gif">

            }

            <h2 class="post-heading">"Safety is as simple as ABC - <br />Always Be Careful." </h2> <button type="button" class="btn btn-primary btn-modal" data-toggle="modal" data-target="#exampleModal">Post an Article</button>
            <hr />
            <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="exampleModalLabel">Post An Article</h5>
                            <button type="button" class="modal-close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            @using (Html.BeginForm("PostArticle", "Home"))
                            {
                                @Html.AntiForgeryToken()
                                <div class="form-group">
                                    @Html.LabelFor(m => m.PostArticle.Title, new { @class = "col-form-label" }):
                                    @Html.TextBoxFor(m => m.PostArticle.Title, new { @class = "form-control" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.PostArticle.Article, new { @class = "col-form-label" }):
                                    @Html.TextAreaFor(m => m.PostArticle.Article, new { @class = "form-control form-textarea" })
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                    <button type="submit" value="Save" class="btn btn-primary">Post</button>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <h3 class="inspection-newsfeed">Safety News For the Month of @DateTime.Now.ToString("MMMM")</h3>
        @foreach (var article in Model.SafetyNews)
        {
            <ul class="safety-news">
                <li>
                    <div class="view-article">
                        <a href="@Url.Action("ViewArticle", "Home", new { id = article.Id })">View Article</a>
                    </div>
                    <div class="article-poster">
                        <p><strong> @article.User.FirstName @article.User.LastName</strong></p>
                    </div>

                    <div class="article-date">
                        <p>@article.DatePosted.ToString("MMM dd yyyy hh:mm tt")</p>
                    </div>
                    <div class="article-Title">
                        <p>Title: @article.Title</p>
                    </div>
                    <div class="article-Title">
                        <p>Content: @article.Article</p>
                    </div>
                    <div class="article-buttons">
                        <div class="like-button">
                            <button type="button"
                                    data-news-id="@article.Id"
                                    class="btn @(Model.Like.Contains(article.Id) ? "btn-primary" : "btn-default") btn-lg btn-like js-toggle-like">
                                <span class="glyphicon glyphicon-thumbs-up" aria-hidden="true"></span> Like
                            </button>
                        </div>
                    </div>
                    <div class="comment-button" id="comment-button">
                        <button type="button" class="btn btn-default btn-lg btn-comment">
                            <span class="glyphicon glyphicon-thumbs-up" aria-hidden="true"></span> Comment
                        </button>
                    </div>
                    <div class="comment-section" id="commentSection">
                        @using (Html.BeginForm("AddComment", "Home"))
                         {
                            @Html.HiddenFor(m => m.Comment.UserId, new { @Value=User.Identity.GetUserId()})
                            @Html.HiddenFor(m => m.Comment.SafetyNewsId, new { @Value=article.Id})
                            @Html.TextAreaFor(m => m.Comment.postComment, new { @class = "comment-area" })
                            <button type="submit" value="Save" class="btn btn-primary btn-post-comment">Post</button>
                         }
                    </div>
                </li>
            </ul>
         }

    </div>
    <div class="container-newsfeed3">
        <img class="profImage" src="/Image/Avatar.jpg">
        <ul class="userInfo">
            @if (Model.User.IsQA)
            {
                <li class="label label-success">Inspector</li>
                }
            <li class="userInfo-list"><strong>Name:</strong> @Model.User.FirstName @Model.User.LastName</li>
            <li class="userInfo-list"><strong>Org:</strong> @Model.User.Organization.Name</li>
            <li class="userInfo-list"><strong>Email:</strong>@Model.User.Email</li>
            <li class="userInfo-list"><strong>Phone Number: </strong>@Model.User.PhoneNumber</li>
        </ul>
    </div>
</div>


@section scripts
    {
    <script>
        $(document).ready(function () {
            
            $("[id=comment-button]").click(function () {
                $(this).next(".comment-section").slideToggle("fast");
                return false;
            });

            @*$(".comment-section").on("click", ".btn-post-comment", function () {
                var id = $(this).attr("data-news-id");

                $.ajax({
                    data: { id: id, comment: $(".comment-area").val(), user: "GetInfo('@User.Identity.GetUserId()')" },
                    url: "/api/comment/",
                    dataType: "json",
                    type: "post",
                    success: function () {
                        toastr.success("Success")
                    },
                    fail: function () {
                        toastr.fail("Failed");
                    }
                });
            });*@


            $(".js-toggle-like").click(function (e) {
                var button = $(e.target);
                if (button.hasClass("btn-default")) {
                    $.post("/api/like", { safetyNewsId: button.attr("data-news-id") })
                        .done(function () {
                            button
                                .removeClass("btn-default")
                                .addClass("btn-primary");
                        })
                        .fail(function () {
                            toastr.error("Something Failed");
                        });
                } else {
                    $.ajax({
                        url: "/api/like/" + button.attr("data-news-id"),
                        method: "DELETE"
                    })
                        .done(function () {
                            button
                                .removeClass("btn-primary")
                                .addClass("btn-default");
                        })
                        .fail(function () {
                            toastr.error("Something Failed")
                        });
                }
               
            });



            $(".js-cancel-inspection").click(function (e) {
                var cancelLink = $(e.target);

                bootbox.dialog({
                    title: 'Confirm',
                    message: "Are you sure you want to cancel this inspection?",
                    buttons: {
                        no: {
                            label: "No",
                            className: 'btn-default',
                            callback: function () {
                                bootbox.hideAll();
                            }
                        },
                        yes: {
                            label: "Yes",
                            className: 'btn-danger',
                            callback: function () {
                                $.ajax({
                                    url: "/api/inspections/" + cancelLink.attr("data-inspection-id"),
                                    method: "DELETE"
                                })
                                    .done(function () {
                                        cancelLink.parents("li").fadeOut(function () {
                                            $(this).remove();
                                        });
                                        toastr.success("Inspection has been successfully cancelled")
                                    })
                                    .fail(function () {
                                        toastr.fail("An error has occured.");
                                    });
                            }
                        }
                    }
                });
            });
        });
    </script>
}



